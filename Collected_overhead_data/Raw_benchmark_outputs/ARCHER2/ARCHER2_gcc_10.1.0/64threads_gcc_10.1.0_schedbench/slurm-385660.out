Unloading /usr/local/share/epcc-module/epcc-module-loader

Warning: Unloading the epcc-setup-env module will stop many
modules being available on the system. If you do this by
accident, you can recover the situation with the command:

	module load /work/y07/shared/archer2-modules/modulefiles-cse/epcc-setup-env

Unloading /work/y07/shared/archer2-modules/modulefiles-cse/epcc-setup-env
Unloading bolt/0.7
Loading bolt/0.7
Loading /work/y07/shared/archer2-modules/modulefiles-cse/epcc-setup-env
Loading /usr/local/share/epcc-module/epcc-module-loader

Loading epcc-job-env
  Loading requirement: bolt/0.7
    /work/y07/shared/archer2-modules/modulefiles-cse/epcc-setup-env
Running OpenMP benchmark version 3.0
	64 thread(s)
	20 outer repetitions
	1000.00 test time (microseconds)
	126 delay length (iterations) 
	0.100000 delay time (microseconds)

--------------------------------------------------------
Computing reference time time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                13.268331   13.019120   13.620769    0.226894      0

reference time time     = 13.268331 microseconds +/- 0.444712

--------------------------------------------------------
Computing STATIC time using 20 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                18.838153   18.631597   19.822840    0.266937      1

STATIC time     = 18.838153 microseconds +/- 0.523197
STATIC overhead = 5.569823 microseconds +/- 0.967909

--------------------------------------------------------
Computing STATIC 1 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                18.093947   18.049037   18.171644    0.029289      0

STATIC 1 time     = 18.093947 microseconds +/- 0.057407
STATIC 1 overhead = 4.825616 microseconds +/- 0.502119

--------------------------------------------------------
Computing STATIC 2 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                19.000075   18.939482   19.090400    0.036147      0

STATIC 2 time     = 19.000075 microseconds +/- 0.070847
STATIC 2 overhead = 5.731744 microseconds +/- 0.515559

--------------------------------------------------------
Computing STATIC 4 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                18.300812   18.209462   18.537282    0.077250      1

STATIC 4 time     = 18.300812 microseconds +/- 0.151410
STATIC 4 overhead = 5.032481 microseconds +/- 0.596122

--------------------------------------------------------
Computing STATIC 8 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                18.689732   18.187369   27.002762    1.957229      1

STATIC 8 time     = 18.689732 microseconds +/- 3.836169
STATIC 8 overhead = 5.421401 microseconds +/- 4.280881

--------------------------------------------------------
Computing STATIC 16 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                18.228861   18.148850   18.292312    0.039624      0

STATIC 16 time     = 18.228861 microseconds +/- 0.077663
STATIC 16 overhead = 4.960530 microseconds +/- 0.522376

--------------------------------------------------------
Computing STATIC 32 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                18.238128   18.157244   18.958081    0.171801      1

STATIC 32 time     = 18.238128 microseconds +/- 0.336729
STATIC 32 overhead = 4.969798 microseconds +/- 0.781441

--------------------------------------------------------
Computing STATIC 64 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                18.201810   18.116100   18.246975    0.028703      0

STATIC 64 time     = 18.201810 microseconds +/- 0.056259
STATIC 64 overhead = 4.933479 microseconds +/- 0.500971

--------------------------------------------------------
Computing STATIC 128 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                19.184919   18.114537   27.015350    2.577929      1

STATIC 128 time     = 19.184919 microseconds +/- 5.052742
STATIC 128 overhead = 5.916588 microseconds +/- 5.497454

--------------------------------------------------------
Computing DYNAMIC 1 time using 20 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                159.999405   154.421944   175.692595    4.705641      1

DYNAMIC 1 time     = 159.999405 microseconds +/- 9.223055
DYNAMIC 1 overhead = 146.731074 microseconds +/- 9.667768

--------------------------------------------------------
Computing DYNAMIC 2 time using 40 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                80.019162   78.539999   92.274725    2.917015      1

DYNAMIC 2 time     = 80.019162 microseconds +/- 5.717349
DYNAMIC 2 overhead = 66.750831 microseconds +/- 6.162061

--------------------------------------------------------
Computing DYNAMIC 4 time using 80 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                47.835854   41.233125   67.392600    7.463295      0

DYNAMIC 4 time     = 47.835854 microseconds +/- 14.628059
DYNAMIC 4 overhead = 34.567523 microseconds +/- 15.072771

--------------------------------------------------------
Computing DYNAMIC 8 time using 80 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                33.977679   33.341424   38.359140    1.065585      1

DYNAMIC 8 time     = 33.977679 microseconds +/- 2.088548
DYNAMIC 8 overhead = 20.709348 microseconds +/- 2.533260

--------------------------------------------------------
Computing DYNAMIC 16 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                23.778467   23.584232   24.459157    0.200030      1

DYNAMIC 16 time     = 23.778467 microseconds +/- 0.392060
DYNAMIC 16 overhead = 10.510136 microseconds +/- 0.836772

--------------------------------------------------------
Computing DYNAMIC 32 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                21.629046   21.489857   21.804651    0.082944      0

DYNAMIC 32 time     = 21.629046 microseconds +/- 0.162570
DYNAMIC 32 overhead = 8.360715 microseconds +/- 0.607282

--------------------------------------------------------
Computing DYNAMIC 64 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                21.368294   21.055213   24.273613    0.693140      1

DYNAMIC 64 time     = 21.368294 microseconds +/- 1.358555
DYNAMIC 64 overhead = 8.099963 microseconds +/- 1.803267

--------------------------------------------------------
Computing DYNAMIC 128 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                20.987020   20.793844   21.212451    0.103448      0

DYNAMIC 128 time     = 20.987020 microseconds +/- 0.202758
DYNAMIC 128 overhead = 7.718689 microseconds +/- 0.647470

--------------------------------------------------------
Computing GUIDED 1 time using 80 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                40.468225   40.178999   40.694227    0.142474      0

GUIDED 1 time     = 40.468225 microseconds +/- 0.279249
GUIDED 1 overhead = 27.199895 microseconds +/- 0.723961

--------------------------------------------------------
Computing GUIDED 2 time using 80 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                38.589414   38.002225   42.435926    0.929598      1

GUIDED 2 time     = 38.589414 microseconds +/- 1.822011
GUIDED 2 overhead = 25.321083 microseconds +/- 2.266723
Using built-in specs.
COLLECT_GCC=/opt/gcc/10.1.0/bin/../snos/bin/gcc
COLLECT_LTO_WRAPPER=/opt/gcc/10.1.0/snos/libexec/gcc/x86_64-suse-linux/10.1.0/lto-wrapper
Target: x86_64-suse-linux
Configured with: ../cray-gcc-10.1.0-202007190429.e9e165705b91a/configure --prefix=/opt/gcc/10.1.0/snos --disable-nls --libdir=/opt/gcc/10.1.0/snos/lib --enable-languages=c,c++,fortran --with-gxx-include-dir=/opt/gcc/10.1.0/snos/include/g++ --with-slibdir=/opt/gcc/10.1.0/snos/lib --with-system-zlib --enable-shared --enable-__cxa_atexit --build=x86_64-suse-linux --with-ppl --with-cloog --disable-multilib
Thread model: posix
Supported LTO compression algorithms: zlib
gcc version 10.1.0 20200507 (Cray Inc.) (GCC) 
