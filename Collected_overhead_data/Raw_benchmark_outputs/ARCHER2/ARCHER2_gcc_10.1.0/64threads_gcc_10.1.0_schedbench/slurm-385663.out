Unloading /usr/local/share/epcc-module/epcc-module-loader

Warning: Unloading the epcc-setup-env module will stop many
modules being available on the system. If you do this by
accident, you can recover the situation with the command:

	module load /work/y07/shared/archer2-modules/modulefiles-cse/epcc-setup-env

Unloading /work/y07/shared/archer2-modules/modulefiles-cse/epcc-setup-env
Unloading bolt/0.7
Loading bolt/0.7
Loading /work/y07/shared/archer2-modules/modulefiles-cse/epcc-setup-env
Loading /usr/local/share/epcc-module/epcc-module-loader

Loading epcc-job-env
  Loading requirement: bolt/0.7
    /work/y07/shared/archer2-modules/modulefiles-cse/epcc-setup-env
Running OpenMP benchmark version 3.0
	64 thread(s)
	20 outer repetitions
	1000.00 test time (microseconds)
	114 delay length (iterations) 
	0.100000 delay time (microseconds)

--------------------------------------------------------
Computing reference time time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                12.031589   11.628275   12.870150    0.349794      0

reference time time     = 12.031589 microseconds +/- 0.685596

--------------------------------------------------------
Computing STATIC time using 20 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                20.342124   17.148745   74.290903    12.732286      1

STATIC time     = 20.342124 microseconds +/- 24.955280
STATIC overhead = 8.310535 microseconds +/- 25.640877

--------------------------------------------------------
Computing STATIC 1 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                16.691246   16.436199   18.820638    0.531777      1

STATIC 1 time     = 16.691246 microseconds +/- 1.042283
STATIC 1 overhead = 4.659657 microseconds +/- 1.727880

--------------------------------------------------------
Computing STATIC 2 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                17.576077   17.173175   24.220013    1.564670      1

STATIC 2 time     = 17.576077 microseconds +/- 3.066752
STATIC 2 overhead = 5.544488 microseconds +/- 3.752349

--------------------------------------------------------
Computing STATIC 4 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                16.639221   16.607274   16.670219    0.019084      0

STATIC 4 time     = 16.639221 microseconds +/- 0.037405
STATIC 4 overhead = 4.607632 microseconds +/- 0.723001

--------------------------------------------------------
Computing STATIC 8 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                16.577538   16.534075   16.628069    0.026583      0

STATIC 8 time     = 16.577538 microseconds +/- 0.052103
STATIC 8 overhead = 4.545949 microseconds +/- 0.737700

--------------------------------------------------------
Computing STATIC 16 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                16.549034   16.497569   16.592881    0.024980      0

STATIC 16 time     = 16.549034 microseconds +/- 0.048962
STATIC 16 overhead = 4.517445 microseconds +/- 0.734558

--------------------------------------------------------
Computing STATIC 32 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                16.532605   16.483731   16.573782    0.024370      0

STATIC 32 time     = 16.532605 microseconds +/- 0.047766
STATIC 32 overhead = 4.501016 microseconds +/- 0.733362

--------------------------------------------------------
Computing STATIC 64 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                16.939335   16.496819   24.337732    1.741931      1

STATIC 64 time     = 16.939335 microseconds +/- 3.414184
STATIC 64 overhead = 4.907746 microseconds +/- 4.099780

--------------------------------------------------------
Computing STATIC 128 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                16.585728   16.475594   17.938638    0.319814      1

STATIC 128 time     = 16.585728 microseconds +/- 0.626836
STATIC 128 overhead = 4.554139 microseconds +/- 1.312432

--------------------------------------------------------
Computing DYNAMIC 1 time using 20 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                239.475440   203.471142   271.141843    23.590023      0

DYNAMIC 1 time     = 239.475440 microseconds +/- 46.236445
DYNAMIC 1 overhead = 227.443851 microseconds +/- 46.922041

--------------------------------------------------------
Computing DYNAMIC 2 time using 20 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                130.340649   126.482046   159.358897    6.927919      1

DYNAMIC 2 time     = 130.340649 microseconds +/- 13.578721
DYNAMIC 2 overhead = 118.309060 microseconds +/- 14.264318

--------------------------------------------------------
Computing DYNAMIC 4 time using 40 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                67.030223   66.426623   67.739625    0.346546      0

DYNAMIC 4 time     = 67.030223 microseconds +/- 0.679230
DYNAMIC 4 overhead = 54.998634 microseconds +/- 1.364826

--------------------------------------------------------
Computing DYNAMIC 8 time using 80 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                36.098140   35.492549   37.593677    0.415747      1

DYNAMIC 8 time     = 36.098140 microseconds +/- 0.814864
DYNAMIC 8 overhead = 24.066551 microseconds +/- 1.500461

--------------------------------------------------------
Computing DYNAMIC 16 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                22.366564   22.052493   22.712881    0.205916      0

DYNAMIC 16 time     = 22.366564 microseconds +/- 0.403596
DYNAMIC 16 overhead = 10.334975 microseconds +/- 1.089192

--------------------------------------------------------
Computing DYNAMIC 32 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                19.900278   19.653793   20.324944    0.146292      0

DYNAMIC 32 time     = 19.900278 microseconds +/- 0.286732
DYNAMIC 32 overhead = 7.868689 microseconds +/- 0.972328

--------------------------------------------------------
Computing DYNAMIC 64 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                20.001919   19.748601   20.350557    0.145187      0

DYNAMIC 64 time     = 20.001919 microseconds +/- 0.284566
DYNAMIC 64 overhead = 7.970330 microseconds +/- 0.970162

--------------------------------------------------------
Computing DYNAMIC 128 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                19.709661   19.536188   19.841144    0.074563      0

DYNAMIC 128 time     = 19.709661 microseconds +/- 0.146143
DYNAMIC 128 overhead = 7.678073 microseconds +/- 0.831739

--------------------------------------------------------
Computing GUIDED 1 time using 80 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                37.894458   37.518161   38.196199    0.196512      0

GUIDED 1 time     = 37.894458 microseconds +/- 0.385163
GUIDED 1 overhead = 25.862869 microseconds +/- 1.070759

--------------------------------------------------------
Computing GUIDED 2 time using 80 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                36.346222   35.150637   51.175375    3.499221      1

GUIDED 2 time     = 36.346222 microseconds +/- 6.858474
GUIDED 2 overhead = 24.314633 microseconds +/- 7.544070
Using built-in specs.
COLLECT_GCC=/opt/gcc/10.1.0/bin/../snos/bin/gcc
COLLECT_LTO_WRAPPER=/opt/gcc/10.1.0/snos/libexec/gcc/x86_64-suse-linux/10.1.0/lto-wrapper
Target: x86_64-suse-linux
Configured with: ../cray-gcc-10.1.0-202007190429.e9e165705b91a/configure --prefix=/opt/gcc/10.1.0/snos --disable-nls --libdir=/opt/gcc/10.1.0/snos/lib --enable-languages=c,c++,fortran --with-gxx-include-dir=/opt/gcc/10.1.0/snos/include/g++ --with-slibdir=/opt/gcc/10.1.0/snos/lib --with-system-zlib --enable-shared --enable-__cxa_atexit --build=x86_64-suse-linux --with-ppl --with-cloog --disable-multilib
Thread model: posix
Supported LTO compression algorithms: zlib
gcc version 10.1.0 20200507 (Cray Inc.) (GCC) 
