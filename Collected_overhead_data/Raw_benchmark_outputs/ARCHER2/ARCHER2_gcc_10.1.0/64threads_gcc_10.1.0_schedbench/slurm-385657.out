Unloading /usr/local/share/epcc-module/epcc-module-loader

Warning: Unloading the epcc-setup-env module will stop many
modules being available on the system. If you do this by
accident, you can recover the situation with the command:

	module load /work/y07/shared/archer2-modules/modulefiles-cse/epcc-setup-env

Unloading /work/y07/shared/archer2-modules/modulefiles-cse/epcc-setup-env
Unloading bolt/0.7
Loading bolt/0.7
Loading /work/y07/shared/archer2-modules/modulefiles-cse/epcc-setup-env
Loading /usr/local/share/epcc-module/epcc-module-loader

Loading epcc-job-env
  Loading requirement: bolt/0.7
    /work/y07/shared/archer2-modules/modulefiles-cse/epcc-setup-env
Running OpenMP benchmark version 3.0
	64 thread(s)
	20 outer repetitions
	1000.00 test time (microseconds)
	126 delay length (iterations) 
	0.100000 delay time (microseconds)

--------------------------------------------------------
Computing reference time time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                13.416760   13.052681   14.285475    0.395491      0

reference time time     = 13.416760 microseconds +/- 0.775162

--------------------------------------------------------
Computing STATIC time using 20 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                19.888164   18.346554   39.453851    4.839209      1

STATIC time     = 19.888164 microseconds +/- 9.484849
STATIC overhead = 6.471404 microseconds +/- 10.260012

--------------------------------------------------------
Computing STATIC 1 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                17.772357   17.704062   17.935438    0.050144      1

STATIC 1 time     = 17.772357 microseconds +/- 0.098282
STATIC 1 overhead = 4.355597 microseconds +/- 0.873444

--------------------------------------------------------
Computing STATIC 2 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                18.703874   18.628142   18.821638    0.046367      0

STATIC 2 time     = 18.703874 microseconds +/- 0.090880
STATIC 2 overhead = 5.287114 microseconds +/- 0.866042

--------------------------------------------------------
Computing STATIC 4 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                17.944805   17.906576   17.978212    0.021029      0

STATIC 4 time     = 17.944805 microseconds +/- 0.041217
STATIC 4 overhead = 4.528045 microseconds +/- 0.816379

--------------------------------------------------------
Computing STATIC 8 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                17.919507   17.873700   17.975019    0.030389      0

STATIC 8 time     = 17.919507 microseconds +/- 0.059562
STATIC 8 overhead = 4.502747 microseconds +/- 0.834725

--------------------------------------------------------
Computing STATIC 16 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                18.092804   17.866181   21.740214    0.858809      1

STATIC 16 time     = 18.092804 microseconds +/- 1.683266
STATIC 16 overhead = 4.676044 microseconds +/- 2.458429

--------------------------------------------------------
Computing STATIC 32 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                17.884784   17.834437   17.940138    0.031332      0

STATIC 32 time     = 17.884784 microseconds +/- 0.061411
STATIC 32 overhead = 4.468024 microseconds +/- 0.836574

--------------------------------------------------------
Computing STATIC 64 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                17.896959   17.845331   17.976711    0.031608      0

STATIC 64 time     = 17.896959 microseconds +/- 0.061952
STATIC 64 overhead = 4.480199 microseconds +/- 0.837114

--------------------------------------------------------
Computing STATIC 128 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                17.999473   17.830993   20.547376    0.600338      1

STATIC 128 time     = 17.999473 microseconds +/- 1.176662
STATIC 128 overhead = 4.582713 microseconds +/- 1.951824

--------------------------------------------------------
Computing DYNAMIC 1 time using 20 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                255.556456   250.978407   262.718799    2.923670      0

DYNAMIC 1 time     = 255.556456 microseconds +/- 5.730392
DYNAMIC 1 overhead = 242.139696 microseconds +/- 6.505555

--------------------------------------------------------
Computing DYNAMIC 2 time using 20 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                143.608939   127.477502   422.311050    65.605157      1

DYNAMIC 2 time     = 143.608939 microseconds +/- 128.586109
DYNAMIC 2 overhead = 130.192179 microseconds +/- 129.361271

--------------------------------------------------------
Computing DYNAMIC 4 time using 40 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                66.850368   66.101004   68.029948    0.471837      0

DYNAMIC 4 time     = 66.850368 microseconds +/- 0.924800
DYNAMIC 4 overhead = 53.433608 microseconds +/- 1.699962

--------------------------------------------------------
Computing DYNAMIC 8 time using 80 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                35.959249   35.611386   36.363574    0.216466      0

DYNAMIC 8 time     = 35.959249 microseconds +/- 0.424273
DYNAMIC 8 overhead = 22.542489 microseconds +/- 1.199435

--------------------------------------------------------
Computing DYNAMIC 16 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                23.633043   23.417163   23.991257    0.156354      0

DYNAMIC 16 time     = 23.633043 microseconds +/- 0.306455
DYNAMIC 16 overhead = 10.216283 microseconds +/- 1.081617

--------------------------------------------------------
Computing DYNAMIC 32 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                21.179336   20.954212   21.354725    0.106246      0

DYNAMIC 32 time     = 21.179336 microseconds +/- 0.208242
DYNAMIC 32 overhead = 7.762576 microseconds +/- 0.983404

--------------------------------------------------------
Computing DYNAMIC 64 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                21.278193   21.096038   21.472700    0.115480      0

DYNAMIC 64 time     = 21.278193 microseconds +/- 0.226340
DYNAMIC 64 overhead = 7.861433 microseconds +/- 1.001503

--------------------------------------------------------
Computing DYNAMIC 128 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                21.120543   20.760213   22.149683    0.271741      1

DYNAMIC 128 time     = 21.120543 microseconds +/- 0.532611
DYNAMIC 128 overhead = 7.703783 microseconds +/- 1.307774

--------------------------------------------------------
Computing GUIDED 1 time using 80 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                39.614876   39.209376   39.906349    0.155997      0

GUIDED 1 time     = 39.614876 microseconds +/- 0.305753
GUIDED 1 overhead = 26.198116 microseconds +/- 1.080916

--------------------------------------------------------
Computing GUIDED 2 time using 80 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                37.270818   36.714750   38.349000    0.362237      0

GUIDED 2 time     = 37.270818 microseconds +/- 0.709984
GUIDED 2 overhead = 23.854058 microseconds +/- 1.485147
Using built-in specs.
COLLECT_GCC=/opt/gcc/10.1.0/bin/../snos/bin/gcc
COLLECT_LTO_WRAPPER=/opt/gcc/10.1.0/snos/libexec/gcc/x86_64-suse-linux/10.1.0/lto-wrapper
Target: x86_64-suse-linux
Configured with: ../cray-gcc-10.1.0-202007190429.e9e165705b91a/configure --prefix=/opt/gcc/10.1.0/snos --disable-nls --libdir=/opt/gcc/10.1.0/snos/lib --enable-languages=c,c++,fortran --with-gxx-include-dir=/opt/gcc/10.1.0/snos/include/g++ --with-slibdir=/opt/gcc/10.1.0/snos/lib --with-system-zlib --enable-shared --enable-__cxa_atexit --build=x86_64-suse-linux --with-ppl --with-cloog --disable-multilib
Thread model: posix
Supported LTO compression algorithms: zlib
gcc version 10.1.0 20200507 (Cray Inc.) (GCC) 
