Unloading /usr/local/share/epcc-module/epcc-module-loader

Warning: Unloading the epcc-setup-env module will stop many
modules being available on the system. If you do this by
accident, you can recover the situation with the command:

	module load /work/y07/shared/archer2-modules/modulefiles-cse/epcc-setup-env

Unloading /work/y07/shared/archer2-modules/modulefiles-cse/epcc-setup-env
Unloading bolt/0.7
Loading bolt/0.7
Loading /work/y07/shared/archer2-modules/modulefiles-cse/epcc-setup-env
Loading /usr/local/share/epcc-module/epcc-module-loader

Loading epcc-job-env
  Loading requirement: bolt/0.7
    /work/y07/shared/archer2-modules/modulefiles-cse/epcc-setup-env
Running OpenMP benchmark version 3.0
	64 thread(s)
	20 outer repetitions
	1000.00 test time (microseconds)
	114 delay length (iterations) 
	0.100000 delay time (microseconds)

--------------------------------------------------------
Computing reference time time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                11.891008   11.680243   12.422788    0.217404      0

reference time time     = 11.891008 microseconds +/- 0.426112

--------------------------------------------------------
Computing STATIC time using 20 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                18.609294   16.890303   43.729006    6.026778      1

STATIC time     = 18.609294 microseconds +/- 11.812485
STATIC overhead = 6.718285 microseconds +/- 12.238597

--------------------------------------------------------
Computing STATIC 1 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                16.424130   16.378349   16.471713    0.027478      0

STATIC 1 time     = 16.424130 microseconds +/- 0.053856
STATIC 1 overhead = 4.533122 microseconds +/- 0.479969

--------------------------------------------------------
Computing STATIC 2 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                17.093123   17.044932   17.255456    0.047102      1

STATIC 2 time     = 17.093123 microseconds +/- 0.092319
STATIC 2 overhead = 5.202115 microseconds +/- 0.518431

--------------------------------------------------------
Computing STATIC 4 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                16.482400   16.444913   16.580919    0.033731      0

STATIC 4 time     = 16.482400 microseconds +/- 0.066113
STATIC 4 overhead = 4.591392 microseconds +/- 0.492225

--------------------------------------------------------
Computing STATIC 8 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                16.445848   16.394751   16.592507    0.053223      0

STATIC 8 time     = 16.445848 microseconds +/- 0.104316
STATIC 8 overhead = 4.554840 microseconds +/- 0.530429

--------------------------------------------------------
Computing STATIC 16 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                16.409726   16.364506   16.466013    0.028132      0

STATIC 16 time     = 16.409726 microseconds +/- 0.055139
STATIC 16 overhead = 4.518718 microseconds +/- 0.481251

--------------------------------------------------------
Computing STATIC 32 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                16.401627   16.334130   16.457055    0.031597      0

STATIC 32 time     = 16.401627 microseconds +/- 0.061931
STATIC 32 overhead = 4.510619 microseconds +/- 0.488043

--------------------------------------------------------
Computing STATIC 64 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                16.421258   16.348975   16.638968    0.064128      1

STATIC 64 time     = 16.421258 microseconds +/- 0.125690
STATIC 64 overhead = 4.530250 microseconds +/- 0.551803

--------------------------------------------------------
Computing STATIC 128 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                16.407698   16.369887   16.491563    0.026936      1

STATIC 128 time     = 16.407698 microseconds +/- 0.052794
STATIC 128 overhead = 4.516689 microseconds +/- 0.478907

--------------------------------------------------------
Computing DYNAMIC 1 time using 20 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                220.338813   190.855504   267.261441    22.935107      0

DYNAMIC 1 time     = 220.338813 microseconds +/- 44.952810
DYNAMIC 1 overhead = 208.447805 microseconds +/- 45.378922

--------------------------------------------------------
Computing DYNAMIC 2 time using 20 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                125.769161   119.200640   127.739948    2.339626      0

DYNAMIC 2 time     = 125.769161 microseconds +/- 4.585666
DYNAMIC 2 overhead = 113.878153 microseconds +/- 5.011779

--------------------------------------------------------
Computing DYNAMIC 4 time using 40 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                65.518780   64.802502   66.244049    0.395841      0

DYNAMIC 4 time     = 65.518780 microseconds +/- 0.775848
DYNAMIC 4 overhead = 53.627771 microseconds +/- 1.201960

--------------------------------------------------------
Computing DYNAMIC 8 time using 80 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                36.019359   34.685375   51.824976    3.727681      1

DYNAMIC 8 time     = 36.019359 microseconds +/- 7.306255
DYNAMIC 8 overhead = 24.128351 microseconds +/- 7.732368

--------------------------------------------------------
Computing DYNAMIC 16 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                22.511729   21.912537   29.656081    1.688766      1

DYNAMIC 16 time     = 22.511729 microseconds +/- 3.309982
DYNAMIC 16 overhead = 10.620721 microseconds +/- 3.736095

--------------------------------------------------------
Computing DYNAMIC 32 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                19.584255   19.386338   19.798194    0.122175      0

DYNAMIC 32 time     = 19.584255 microseconds +/- 0.239464
DYNAMIC 32 overhead = 7.693247 microseconds +/- 0.665576

--------------------------------------------------------
Computing DYNAMIC 64 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                19.559451   19.384018   19.795688    0.122164      0

DYNAMIC 64 time     = 19.559451 microseconds +/- 0.239442
DYNAMIC 64 overhead = 7.668443 microseconds +/- 0.665554

--------------------------------------------------------
Computing DYNAMIC 128 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                19.887854   19.156213   25.907737    1.702115      1

DYNAMIC 128 time     = 19.887854 microseconds +/- 3.336146
DYNAMIC 128 overhead = 7.996846 microseconds +/- 3.762258

--------------------------------------------------------
Computing GUIDED 1 time using 80 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                38.530844   38.083375   38.830173    0.225230      0

GUIDED 1 time     = 38.530844 microseconds +/- 0.441450
GUIDED 1 overhead = 26.639836 microseconds +/- 0.867563

--------------------------------------------------------
Computing GUIDED 2 time using 80 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                36.334116   36.027687   36.913762    0.205758      0

GUIDED 2 time     = 36.334116 microseconds +/- 0.403286
GUIDED 2 overhead = 24.443107 microseconds +/- 0.829399
Using built-in specs.
COLLECT_GCC=/opt/gcc/10.1.0/bin/../snos/bin/gcc
COLLECT_LTO_WRAPPER=/opt/gcc/10.1.0/snos/libexec/gcc/x86_64-suse-linux/10.1.0/lto-wrapper
Target: x86_64-suse-linux
Configured with: ../cray-gcc-10.1.0-202007190429.e9e165705b91a/configure --prefix=/opt/gcc/10.1.0/snos --disable-nls --libdir=/opt/gcc/10.1.0/snos/lib --enable-languages=c,c++,fortran --with-gxx-include-dir=/opt/gcc/10.1.0/snos/include/g++ --with-slibdir=/opt/gcc/10.1.0/snos/lib --with-system-zlib --enable-shared --enable-__cxa_atexit --build=x86_64-suse-linux --with-ppl --with-cloog --disable-multilib
Thread model: posix
Supported LTO compression algorithms: zlib
gcc version 10.1.0 20200507 (Cray Inc.) (GCC) 
