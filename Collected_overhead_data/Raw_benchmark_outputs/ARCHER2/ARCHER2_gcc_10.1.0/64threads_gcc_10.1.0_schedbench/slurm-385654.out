Unloading /usr/local/share/epcc-module/epcc-module-loader

Warning: Unloading the epcc-setup-env module will stop many
modules being available on the system. If you do this by
accident, you can recover the situation with the command:

	module load /work/y07/shared/archer2-modules/modulefiles-cse/epcc-setup-env

Unloading /work/y07/shared/archer2-modules/modulefiles-cse/epcc-setup-env
Unloading bolt/0.7
Loading bolt/0.7
Loading /work/y07/shared/archer2-modules/modulefiles-cse/epcc-setup-env
Loading /usr/local/share/epcc-module/epcc-module-loader

Loading epcc-job-env
  Loading requirement: bolt/0.7
    /work/y07/shared/archer2-modules/modulefiles-cse/epcc-setup-env
Running OpenMP benchmark version 3.0
	64 thread(s)
	20 outer repetitions
	1000.00 test time (microseconds)
	126 delay length (iterations) 
	0.100000 delay time (microseconds)

--------------------------------------------------------
Computing reference time time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                13.369096   13.042468   14.359987    0.421353      0

reference time time     = 13.369096 microseconds +/- 0.825852

--------------------------------------------------------
Computing STATIC time using 20 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                20.523726   18.572446   54.904353    8.093172      1

STATIC time     = 20.523726 microseconds +/- 15.862618
STATIC overhead = 7.154629 microseconds +/- 16.688470

--------------------------------------------------------
Computing STATIC 1 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                18.138317   17.876137   21.793375    0.860796      1

STATIC 1 time     = 18.138317 microseconds +/- 1.687161
STATIC 1 overhead = 4.769221 microseconds +/- 2.513013

--------------------------------------------------------
Computing STATIC 2 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                18.887151   18.845432   18.932280    0.026566      0

STATIC 2 time     = 18.887151 microseconds +/- 0.052069
STATIC 2 overhead = 5.518055 microseconds +/- 0.877921

--------------------------------------------------------
Computing STATIC 4 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                18.133916   18.054237   18.192751    0.032557      0

STATIC 4 time     = 18.133916 microseconds +/- 0.063811
STATIC 4 overhead = 4.764820 microseconds +/- 0.889664

--------------------------------------------------------
Computing STATIC 8 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                18.099333   18.054168   18.222618    0.035051      1

STATIC 8 time     = 18.099333 microseconds +/- 0.068700
STATIC 8 overhead = 4.730237 microseconds +/- 0.894552

--------------------------------------------------------
Computing STATIC 16 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                18.061279   18.007393   18.202956    0.049208      0

STATIC 16 time     = 18.061279 microseconds +/- 0.096448
STATIC 16 overhead = 4.692183 microseconds +/- 0.922301

--------------------------------------------------------
Computing STATIC 32 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                18.057375   18.001569   18.140901    0.033951      0

STATIC 32 time     = 18.057375 microseconds +/- 0.066543
STATIC 32 overhead = 4.688279 microseconds +/- 0.892396

--------------------------------------------------------
Computing STATIC 64 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                18.069680   18.004701   18.190742    0.044603      0

STATIC 64 time     = 18.069680 microseconds +/- 0.087421
STATIC 64 overhead = 4.700584 microseconds +/- 0.913274

--------------------------------------------------------
Computing STATIC 128 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                18.326292   17.912145   21.264113    1.004250      0

STATIC 128 time     = 18.326292 microseconds +/- 1.968331
STATIC 128 overhead = 4.957196 microseconds +/- 2.794183

--------------------------------------------------------
Computing DYNAMIC 1 time using 20 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                256.511387   246.670598   359.758094    24.595290      1

DYNAMIC 1 time     = 256.511387 microseconds +/- 48.206769
DYNAMIC 1 overhead = 243.142291 microseconds +/- 49.032621

--------------------------------------------------------
Computing DYNAMIC 2 time using 20 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                128.741129   125.301303   150.877144    5.312745      1

DYNAMIC 2 time     = 128.741129 microseconds +/- 10.412981
DYNAMIC 2 overhead = 115.372033 microseconds +/- 11.238833

--------------------------------------------------------
Computing DYNAMIC 4 time using 40 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                66.022134   64.923498   66.667347    0.459132      0

DYNAMIC 4 time     = 66.022134 microseconds +/- 0.899899
DYNAMIC 4 overhead = 52.653038 microseconds +/- 1.725752

--------------------------------------------------------
Computing DYNAMIC 8 time using 80 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                36.918893   35.705950   45.506912    2.899345      0

DYNAMIC 8 time     = 36.918893 microseconds +/- 5.682716
DYNAMIC 8 overhead = 23.549797 microseconds +/- 6.508569

--------------------------------------------------------
Computing DYNAMIC 16 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                23.835305   23.572081   24.066781    0.133733      0

DYNAMIC 16 time     = 23.835305 microseconds +/- 0.262116
DYNAMIC 16 overhead = 10.466208 microseconds +/- 1.087968

--------------------------------------------------------
Computing DYNAMIC 32 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                21.476458   21.303125   21.714912    0.094788      0

DYNAMIC 32 time     = 21.476458 microseconds +/- 0.185785
DYNAMIC 32 overhead = 8.107362 microseconds +/- 1.011637

--------------------------------------------------------
Computing DYNAMIC 64 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                21.412552   21.223100   21.646032    0.112463      0

DYNAMIC 64 time     = 21.412552 microseconds +/- 0.220428
DYNAMIC 64 overhead = 8.043456 microseconds +/- 1.046281

--------------------------------------------------------
Computing DYNAMIC 128 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                22.171007   20.892275   39.777286    4.146053      1

DYNAMIC 128 time     = 22.171007 microseconds +/- 8.126264
DYNAMIC 128 overhead = 8.801911 microseconds +/- 8.952117

--------------------------------------------------------
Computing GUIDED 1 time using 80 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                40.612692   39.873150   48.332562    1.846415      1

GUIDED 1 time     = 40.612692 microseconds +/- 3.618974
GUIDED 1 overhead = 27.243596 microseconds +/- 4.444827

--------------------------------------------------------
Computing GUIDED 2 time using 80 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                37.874937   37.545076   38.163399    0.175673      0

GUIDED 2 time     = 37.874937 microseconds +/- 0.344318
GUIDED 2 overhead = 24.505841 microseconds +/- 1.170171
Using built-in specs.
COLLECT_GCC=/opt/gcc/10.1.0/bin/../snos/bin/gcc
COLLECT_LTO_WRAPPER=/opt/gcc/10.1.0/snos/libexec/gcc/x86_64-suse-linux/10.1.0/lto-wrapper
Target: x86_64-suse-linux
Configured with: ../cray-gcc-10.1.0-202007190429.e9e165705b91a/configure --prefix=/opt/gcc/10.1.0/snos --disable-nls --libdir=/opt/gcc/10.1.0/snos/lib --enable-languages=c,c++,fortran --with-gxx-include-dir=/opt/gcc/10.1.0/snos/include/g++ --with-slibdir=/opt/gcc/10.1.0/snos/lib --with-system-zlib --enable-shared --enable-__cxa_atexit --build=x86_64-suse-linux --with-ppl --with-cloog --disable-multilib
Thread model: posix
Supported LTO compression algorithms: zlib
gcc version 10.1.0 20200507 (Cray Inc.) (GCC) 
