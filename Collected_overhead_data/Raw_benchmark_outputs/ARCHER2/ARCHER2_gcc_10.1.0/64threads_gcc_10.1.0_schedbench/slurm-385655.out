Unloading /usr/local/share/epcc-module/epcc-module-loader

Warning: Unloading the epcc-setup-env module will stop many
modules being available on the system. If you do this by
accident, you can recover the situation with the command:

	module load /work/y07/shared/archer2-modules/modulefiles-cse/epcc-setup-env

Unloading /work/y07/shared/archer2-modules/modulefiles-cse/epcc-setup-env
Unloading bolt/0.7
Loading bolt/0.7
Loading /work/y07/shared/archer2-modules/modulefiles-cse/epcc-setup-env
Loading /usr/local/share/epcc-module/epcc-module-loader

Loading epcc-job-env
  Loading requirement: bolt/0.7
    /work/y07/shared/archer2-modules/modulefiles-cse/epcc-setup-env
Running OpenMP benchmark version 3.0
	64 thread(s)
	20 outer repetitions
	1000.00 test time (microseconds)
	114 delay length (iterations) 
	0.100000 delay time (microseconds)

--------------------------------------------------------
Computing reference time time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                11.921883   11.624582   12.367187    0.243339      0

reference time time     = 11.921883 microseconds +/- 0.476945

--------------------------------------------------------
Computing STATIC time using 20 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                18.029817   17.005450   34.734351    3.933381      1

STATIC time     = 18.029817 microseconds +/- 7.709427
STATIC overhead = 6.107935 microseconds +/- 8.186372

--------------------------------------------------------
Computing STATIC 1 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                16.504265   16.459687   16.654687    0.041646      1

STATIC 1 time     = 16.504265 microseconds +/- 0.081626
STATIC 1 overhead = 4.582382 microseconds +/- 0.558571

--------------------------------------------------------
Computing STATIC 2 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                17.236971   17.170244   17.297294    0.034939      0

STATIC 2 time     = 17.236971 microseconds +/- 0.068481
STATIC 2 overhead = 5.315088 microseconds +/- 0.545426

--------------------------------------------------------
Computing STATIC 4 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                16.631642   16.592575   16.659325    0.019310      0

STATIC 4 time     = 16.631642 microseconds +/- 0.037847
STATIC 4 overhead = 4.709760 microseconds +/- 0.514792

--------------------------------------------------------
Computing STATIC 8 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                16.793304   16.525938   20.835362    0.951789      1

STATIC 8 time     = 16.793304 microseconds +/- 1.865507
STATIC 8 overhead = 4.871421 microseconds +/- 2.342452

--------------------------------------------------------
Computing STATIC 16 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                16.568821   16.527256   16.605032    0.020542      0

STATIC 16 time     = 16.568821 microseconds +/- 0.040263
STATIC 16 overhead = 4.646939 microseconds +/- 0.517208

--------------------------------------------------------
Computing STATIC 32 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                16.550666   16.509039   16.576731    0.016206      0

STATIC 32 time     = 16.550666 microseconds +/- 0.031764
STATIC 32 overhead = 4.628783 microseconds +/- 0.508709

--------------------------------------------------------
Computing STATIC 64 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                16.538198   16.493375   16.585244    0.025521      0

STATIC 64 time     = 16.538198 microseconds +/- 0.050021
STATIC 64 overhead = 4.616315 microseconds +/- 0.526966

--------------------------------------------------------
Computing STATIC 128 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                16.526022   16.478544   16.571530    0.021557      0

STATIC 128 time     = 16.526022 microseconds +/- 0.042252
STATIC 128 overhead = 4.604139 microseconds +/- 0.519197

--------------------------------------------------------
Computing DYNAMIC 1 time using 20 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                193.044279   184.096652   200.532540    5.181995      0

DYNAMIC 1 time     = 193.044279 microseconds +/- 10.156709
DYNAMIC 1 overhead = 181.122396 microseconds +/- 10.633655

--------------------------------------------------------
Computing DYNAMIC 2 time using 40 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                103.859908   99.108054   131.017051    8.417848      1

DYNAMIC 2 time     = 103.859908 microseconds +/- 16.498983
DYNAMIC 2 overhead = 91.938025 microseconds +/- 16.975928

--------------------------------------------------------
Computing DYNAMIC 4 time using 40 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                62.898829   62.337576   63.384324    0.306823      0

DYNAMIC 4 time     = 62.898829 microseconds +/- 0.601373
DYNAMIC 4 overhead = 50.976946 microseconds +/- 1.078318

--------------------------------------------------------
Computing DYNAMIC 8 time using 80 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                37.461102   33.706264   103.170838    15.467210      1

DYNAMIC 8 time     = 37.461102 microseconds +/- 30.315731
DYNAMIC 8 overhead = 25.539220 microseconds +/- 30.792676

--------------------------------------------------------
Computing DYNAMIC 16 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                22.139620   21.896706   22.393906    0.148489      0

DYNAMIC 16 time     = 22.139620 microseconds +/- 0.291039
DYNAMIC 16 overhead = 10.217737 microseconds +/- 0.767984

--------------------------------------------------------
Computing DYNAMIC 32 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                19.851079   19.576338   20.572175    0.219705      1

DYNAMIC 32 time     = 19.851079 microseconds +/- 0.430622
DYNAMIC 32 overhead = 7.929196 microseconds +/- 0.907567

--------------------------------------------------------
Computing DYNAMIC 64 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                19.939682   19.763256   20.091006    0.075108      0

DYNAMIC 64 time     = 19.939682 microseconds +/- 0.147212
DYNAMIC 64 overhead = 8.017800 microseconds +/- 0.624157

--------------------------------------------------------
Computing DYNAMIC 128 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                19.689944   19.490044   19.921869    0.124003      0

DYNAMIC 128 time     = 19.689944 microseconds +/- 0.243046
DYNAMIC 128 overhead = 7.768061 microseconds +/- 0.719991

--------------------------------------------------------
Computing GUIDED 1 time using 80 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                38.177783   37.750238   38.634925    0.203354      0

GUIDED 1 time     = 38.177783 microseconds +/- 0.398574
GUIDED 1 overhead = 26.255900 microseconds +/- 0.875519

--------------------------------------------------------
Computing GUIDED 2 time using 80 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                35.983056   35.490675   36.304223    0.216518      0

GUIDED 2 time     = 35.983056 microseconds +/- 0.424375
GUIDED 2 overhead = 24.061174 microseconds +/- 0.901320
Using built-in specs.
COLLECT_GCC=/opt/gcc/10.1.0/bin/../snos/bin/gcc
COLLECT_LTO_WRAPPER=/opt/gcc/10.1.0/snos/libexec/gcc/x86_64-suse-linux/10.1.0/lto-wrapper
Target: x86_64-suse-linux
Configured with: ../cray-gcc-10.1.0-202007190429.e9e165705b91a/configure --prefix=/opt/gcc/10.1.0/snos --disable-nls --libdir=/opt/gcc/10.1.0/snos/lib --enable-languages=c,c++,fortran --with-gxx-include-dir=/opt/gcc/10.1.0/snos/include/g++ --with-slibdir=/opt/gcc/10.1.0/snos/lib --with-system-zlib --enable-shared --enable-__cxa_atexit --build=x86_64-suse-linux --with-ppl --with-cloog --disable-multilib
Thread model: posix
Supported LTO compression algorithms: zlib
gcc version 10.1.0 20200507 (Cray Inc.) (GCC) 
