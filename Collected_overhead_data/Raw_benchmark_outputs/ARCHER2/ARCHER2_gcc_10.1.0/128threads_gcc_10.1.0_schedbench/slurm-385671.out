Unloading /usr/local/share/epcc-module/epcc-module-loader

Warning: Unloading the epcc-setup-env module will stop many
modules being available on the system. If you do this by
accident, you can recover the situation with the command:

	module load /work/y07/shared/archer2-modules/modulefiles-cse/epcc-setup-env

Unloading /work/y07/shared/archer2-modules/modulefiles-cse/epcc-setup-env
Unloading bolt/0.7
Loading bolt/0.7
Loading /work/y07/shared/archer2-modules/modulefiles-cse/epcc-setup-env
Loading /usr/local/share/epcc-module/epcc-module-loader

Loading epcc-job-env
  Loading requirement: bolt/0.7
    /work/y07/shared/archer2-modules/modulefiles-cse/epcc-setup-env
Running OpenMP benchmark version 3.0
	128 thread(s)
	20 outer repetitions
	1000.00 test time (microseconds)
	126 delay length (iterations) 
	0.100000 delay time (microseconds)

--------------------------------------------------------
Computing reference time time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                14.065552   12.988938   28.239575    3.360753      1

reference time time     = 14.065552 microseconds +/- 6.587075

--------------------------------------------------------
Computing STATIC time using 20 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                95.772049   20.488247   1508.086605    332.426440      1

STATIC time     = 95.772049 microseconds +/- 651.555823
STATIC overhead = 81.706497 microseconds +/- 658.142899

--------------------------------------------------------
Computing STATIC 1 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                21.023793   20.660937   21.731363    0.265359      0

STATIC 1 time     = 21.023793 microseconds +/- 0.520103
STATIC 1 overhead = 6.958241 microseconds +/- 7.107178

--------------------------------------------------------
Computing STATIC 2 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                21.828403   21.766551   21.890856    0.032528      0

STATIC 2 time     = 21.828403 microseconds +/- 0.063756
STATIC 2 overhead = 7.762850 microseconds +/- 6.650831

--------------------------------------------------------
Computing STATIC 4 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                21.145357   21.102586   21.248875    0.037798      0

STATIC 4 time     = 21.145357 microseconds +/- 0.074084
STATIC 4 overhead = 7.079805 microseconds +/- 6.661159

--------------------------------------------------------
Computing STATIC 8 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                21.214057   20.695750   25.100187    0.936423      1

STATIC 8 time     = 21.214057 microseconds +/- 1.835389
STATIC 8 overhead = 7.148505 microseconds +/- 8.422465

--------------------------------------------------------
Computing STATIC 16 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                20.938130   20.724494   21.471862    0.148374      1

STATIC 16 time     = 20.938130 microseconds +/- 0.290814
STATIC 16 overhead = 6.872577 microseconds +/- 6.877889

--------------------------------------------------------
Computing STATIC 32 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                20.910414   20.835899   20.974032    0.038302      0

STATIC 32 time     = 20.910414 microseconds +/- 0.075073
STATIC 32 overhead = 6.844861 microseconds +/- 6.662148

--------------------------------------------------------
Computing STATIC 64 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                23.578678   20.281643   70.186269    11.003838      1

STATIC 64 time     = 23.578678 microseconds +/- 21.567522
STATIC 64 overhead = 9.513126 microseconds +/- 28.154598

--------------------------------------------------------
Computing STATIC 128 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                21.512601   20.468007   35.284812    3.242955      1

STATIC 128 time     = 21.512601 microseconds +/- 6.356192
STATIC 128 overhead = 7.447048 microseconds +/- 12.943267

--------------------------------------------------------
Computing DYNAMIC 1 time using 20 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                295.314150   280.467048   307.027402    7.687172      0

DYNAMIC 1 time     = 295.314150 microseconds +/- 15.066856
DYNAMIC 1 overhead = 281.248598 microseconds +/- 21.653932

--------------------------------------------------------
Computing DYNAMIC 2 time using 20 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                147.462258   143.403548   177.949248    7.328112      1

DYNAMIC 2 time     = 147.462258 microseconds +/- 14.363100
DYNAMIC 2 overhead = 133.396706 microseconds +/- 20.950175

--------------------------------------------------------
Computing DYNAMIC 4 time using 40 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                74.164171   72.844973   76.902751    0.853732      1

DYNAMIC 4 time     = 74.164171 microseconds +/- 1.673315
DYNAMIC 4 overhead = 60.098619 microseconds +/- 8.260390

--------------------------------------------------------
Computing DYNAMIC 8 time using 80 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                38.985979   38.519752   39.478601    0.258146      0

DYNAMIC 8 time     = 38.985979 microseconds +/- 0.505965
DYNAMIC 8 overhead = 24.920427 microseconds +/- 7.093041

--------------------------------------------------------
Computing DYNAMIC 16 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                24.873255   24.309299   25.328563    0.325040      0

DYNAMIC 16 time     = 24.873255 microseconds +/- 0.637078
DYNAMIC 16 overhead = 10.807702 microseconds +/- 7.224153

--------------------------------------------------------
Computing DYNAMIC 32 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                23.877195   23.483532   26.817607    0.732336      1

DYNAMIC 32 time     = 23.877195 microseconds +/- 1.435380
DYNAMIC 32 overhead = 9.811643 microseconds +/- 8.022455

--------------------------------------------------------
Computing DYNAMIC 64 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                23.511566   23.301299   23.686231    0.118843      0

DYNAMIC 64 time     = 23.511566 microseconds +/- 0.232931
DYNAMIC 64 overhead = 9.446014 microseconds +/- 6.820007

--------------------------------------------------------
Computing DYNAMIC 128 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                23.585639   23.197231   25.173074    0.407310      1

DYNAMIC 128 time     = 23.585639 microseconds +/- 0.798328
DYNAMIC 128 overhead = 9.520087 microseconds +/- 7.385404

--------------------------------------------------------
Computing GUIDED 1 time using 40 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                66.607271   66.072779   67.198422    0.277414      0

GUIDED 1 time     = 66.607271 microseconds +/- 0.543732
GUIDED 1 overhead = 52.541719 microseconds +/- 7.130808
Using built-in specs.
COLLECT_GCC=/opt/gcc/10.1.0/bin/../snos/bin/gcc
COLLECT_LTO_WRAPPER=/opt/gcc/10.1.0/snos/libexec/gcc/x86_64-suse-linux/10.1.0/lto-wrapper
Target: x86_64-suse-linux
Configured with: ../cray-gcc-10.1.0-202007190429.e9e165705b91a/configure --prefix=/opt/gcc/10.1.0/snos --disable-nls --libdir=/opt/gcc/10.1.0/snos/lib --enable-languages=c,c++,fortran --with-gxx-include-dir=/opt/gcc/10.1.0/snos/include/g++ --with-slibdir=/opt/gcc/10.1.0/snos/lib --with-system-zlib --enable-shared --enable-__cxa_atexit --build=x86_64-suse-linux --with-ppl --with-cloog --disable-multilib
Thread model: posix
Supported LTO compression algorithms: zlib
gcc version 10.1.0 20200507 (Cray Inc.) (GCC) 
