Unloading /usr/local/share/epcc-module/epcc-module-loader

Warning: Unloading the epcc-setup-env module will stop many
modules being available on the system. If you do this by
accident, you can recover the situation with the command:

	module load /work/y07/shared/archer2-modules/modulefiles-cse/epcc-setup-env

Unloading /work/y07/shared/archer2-modules/modulefiles-cse/epcc-setup-env
Unloading bolt/0.7
Loading bolt/0.7
Loading /work/y07/shared/archer2-modules/modulefiles-cse/epcc-setup-env
Loading /usr/local/share/epcc-module/epcc-module-loader

Loading epcc-job-env
  Loading requirement: bolt/0.7
    /work/y07/shared/archer2-modules/modulefiles-cse/epcc-setup-env
Running OpenMP benchmark version 3.0
	64 thread(s)
	20 outer repetitions
	1000.00 test time (microseconds)
	114 delay length (iterations) 
	0.100000 delay time (microseconds)

--------------------------------------------------------
Computing reference time time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                11.971495   11.672606   12.857431    0.402474      0

reference time time     = 11.971495 microseconds +/- 0.788848

--------------------------------------------------------
Computing STATIC time using 20 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                17.252205   17.106649   17.517456    0.132968      0

STATIC time     = 17.252205 microseconds +/- 0.260617
STATIC overhead = 5.280711 microseconds +/- 1.049465

--------------------------------------------------------
Computing STATIC 1 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                16.659084   16.543474   17.222768    0.148687      1

STATIC 1 time     = 16.659084 microseconds +/- 0.291426
STATIC 1 overhead = 4.687590 microseconds +/- 1.080274

--------------------------------------------------------
Computing STATIC 2 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                17.335759   17.259212   17.636626    0.092518      1

STATIC 2 time     = 17.335759 microseconds +/- 0.181335
STATIC 2 overhead = 5.364264 microseconds +/- 0.970183

--------------------------------------------------------
Computing STATIC 4 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                16.735506   16.686499   16.886501    0.041791      1

STATIC 4 time     = 16.735506 microseconds +/- 0.081911
STATIC 4 overhead = 4.764011 microseconds +/- 0.870759

--------------------------------------------------------
Computing STATIC 8 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                16.654849   16.621687   16.706975    0.025278      0

STATIC 8 time     = 16.654849 microseconds +/- 0.049545
STATIC 8 overhead = 4.683354 microseconds +/- 0.838393

--------------------------------------------------------
Computing STATIC 16 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                16.652779   16.596388   16.800212    0.046938      1

STATIC 16 time     = 16.652779 microseconds +/- 0.091998
STATIC 16 overhead = 4.681285 microseconds +/- 0.880846

--------------------------------------------------------
Computing STATIC 32 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                16.630674   16.576031   16.772350    0.044695      1

STATIC 32 time     = 16.630674 microseconds +/- 0.087602
STATIC 32 overhead = 4.659179 microseconds +/- 0.876451

--------------------------------------------------------
Computing STATIC 64 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                16.966691   16.571775   20.285368    0.891576      1

STATIC 64 time     = 16.966691 microseconds +/- 1.747490
STATIC 64 overhead = 4.995197 microseconds +/- 2.536338

--------------------------------------------------------
Computing STATIC 128 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                16.788582   16.549233   19.481713    0.659589      1

STATIC 128 time     = 16.788582 microseconds +/- 1.292795
STATIC 128 overhead = 4.817087 microseconds +/- 2.081643

--------------------------------------------------------
Computing DYNAMIC 1 time using 20 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                162.025795   153.678993   175.715145    6.304625      0

DYNAMIC 1 time     = 162.025795 microseconds +/- 12.357064
DYNAMIC 1 overhead = 150.054300 microseconds +/- 13.145912

--------------------------------------------------------
Computing DYNAMIC 2 time using 40 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                80.895487   79.036225   97.351952    3.941704      1

DYNAMIC 2 time     = 80.895487 microseconds +/- 7.725739
DYNAMIC 2 overhead = 68.923992 microseconds +/- 8.514587

--------------------------------------------------------
Computing DYNAMIC 4 time using 80 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                41.033676   40.791163   41.262814    0.153120      0

DYNAMIC 4 time     = 41.033676 microseconds +/- 0.300115
DYNAMIC 4 overhead = 29.062181 microseconds +/- 1.088964

--------------------------------------------------------
Computing DYNAMIC 8 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                23.612792   23.401825   23.975295    0.140218      0

DYNAMIC 8 time     = 23.612792 microseconds +/- 0.274826
DYNAMIC 8 overhead = 11.641297 microseconds +/- 1.063674

--------------------------------------------------------
Computing DYNAMIC 16 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                21.510276   19.629931   28.469505    2.124051      1

DYNAMIC 16 time     = 21.510276 microseconds +/- 4.163141
DYNAMIC 16 overhead = 9.538781 microseconds +/- 4.951989

--------------------------------------------------------
Computing DYNAMIC 32 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                20.758605   20.059124   31.360525    2.497305      1

DYNAMIC 32 time     = 20.758605 microseconds +/- 4.894718
DYNAMIC 32 overhead = 8.787110 microseconds +/- 5.683567

--------------------------------------------------------
Computing DYNAMIC 64 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                19.808275   19.692988   19.977975    0.083494      0

DYNAMIC 64 time     = 19.808275 microseconds +/- 0.163649
DYNAMIC 64 overhead = 7.836780 microseconds +/- 0.952497

--------------------------------------------------------
Computing DYNAMIC 128 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                19.553506   19.367681   19.761681    0.097989      0

DYNAMIC 128 time     = 19.553506 microseconds +/- 0.192059
DYNAMIC 128 overhead = 7.582012 microseconds +/- 0.980907

--------------------------------------------------------
Computing GUIDED 1 time using 80 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                40.037410   39.637325   40.400660    0.173629      0

GUIDED 1 time     = 40.037410 microseconds +/- 0.340313
GUIDED 1 overhead = 28.065915 microseconds +/- 1.129161

--------------------------------------------------------
Computing GUIDED 2 time using 80 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                37.953879   37.714536   38.210099    0.114104      0

GUIDED 2 time     = 37.953879 microseconds +/- 0.223644
GUIDED 2 overhead = 25.982385 microseconds +/- 1.012493
Using built-in specs.
COLLECT_GCC=/opt/gcc/10.1.0/bin/../snos/bin/gcc
COLLECT_LTO_WRAPPER=/opt/gcc/10.1.0/snos/libexec/gcc/x86_64-suse-linux/10.1.0/lto-wrapper
Target: x86_64-suse-linux
Configured with: ../cray-gcc-10.1.0-202007190429.e9e165705b91a/configure --prefix=/opt/gcc/10.1.0/snos --disable-nls --libdir=/opt/gcc/10.1.0/snos/lib --enable-languages=c,c++,fortran --with-gxx-include-dir=/opt/gcc/10.1.0/snos/include/g++ --with-slibdir=/opt/gcc/10.1.0/snos/lib --with-system-zlib --enable-shared --enable-__cxa_atexit --build=x86_64-suse-linux --with-ppl --with-cloog --disable-multilib
Thread model: posix
Supported LTO compression algorithms: zlib
gcc version 10.1.0 20200507 (Cray Inc.) (GCC) 
