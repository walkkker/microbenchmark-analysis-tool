Unloading /usr/local/share/epcc-module/epcc-module-loader

Warning: Unloading the epcc-setup-env module will stop many
modules being available on the system. If you do this by
accident, you can recover the situation with the command:

	module load /work/y07/shared/archer2-modules/modulefiles-cse/epcc-setup-env

Unloading /work/y07/shared/archer2-modules/modulefiles-cse/epcc-setup-env
Unloading bolt/0.7
Loading bolt/0.7
Loading /work/y07/shared/archer2-modules/modulefiles-cse/epcc-setup-env
Loading /usr/local/share/epcc-module/epcc-module-loader

Loading epcc-job-env
  Loading requirement: bolt/0.7
    /work/y07/shared/archer2-modules/modulefiles-cse/epcc-setup-env
Running OpenMP benchmark version 3.0
	64 thread(s)
	20 outer repetitions
	1000.00 test time (microseconds)
	126 delay length (iterations) 
	0.100000 delay time (microseconds)

--------------------------------------------------------
Computing reference time time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                13.335596   13.039344   14.288537    0.366771      0

reference time time     = 13.335596 microseconds +/- 0.718871

--------------------------------------------------------
Computing STATIC time using 20 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                22.196895   18.061500   80.553850    14.009300      1

STATIC time     = 22.196895 microseconds +/- 27.458228
STATIC overhead = 8.861299 microseconds +/- 28.177100

--------------------------------------------------------
Computing STATIC 1 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                17.581922   17.506124   17.746269    0.051798      1

STATIC 1 time     = 17.581922 microseconds +/- 0.101524
STATIC 1 overhead = 4.246326 microseconds +/- 0.820396

--------------------------------------------------------
Computing STATIC 2 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                18.534090   18.464013   18.601838    0.031903      0

STATIC 2 time     = 18.534090 microseconds +/- 0.062529
STATIC 2 overhead = 5.198494 microseconds +/- 0.781401

--------------------------------------------------------
Computing STATIC 4 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                17.785934   17.731800   17.939832    0.053352      0

STATIC 4 time     = 17.785934 microseconds +/- 0.104571
STATIC 4 overhead = 4.450339 microseconds +/- 0.823442

--------------------------------------------------------
Computing STATIC 8 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                18.084585   17.709142   20.994907    0.809975      1

STATIC 8 time     = 18.084585 microseconds +/- 1.587552
STATIC 8 overhead = 4.748990 microseconds +/- 2.306423

--------------------------------------------------------
Computing STATIC 16 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                17.777204   17.690982   18.292000    0.130190      1

STATIC 16 time     = 17.777204 microseconds +/- 0.255172
STATIC 16 overhead = 4.441609 microseconds +/- 0.974044

--------------------------------------------------------
Computing STATIC 32 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                17.715524   17.660981   17.836376    0.040459      0

STATIC 32 time     = 17.715524 microseconds +/- 0.079300
STATIC 32 overhead = 4.379928 microseconds +/- 0.798172

--------------------------------------------------------
Computing STATIC 64 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                18.066340   17.658038   24.738874    1.570744      1

STATIC 64 time     = 18.066340 microseconds +/- 3.078659
STATIC 64 overhead = 4.730744 microseconds +/- 3.797530

--------------------------------------------------------
Computing STATIC 128 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                17.796688   17.648019   19.805325    0.473785      1

STATIC 128 time     = 17.796688 microseconds +/- 0.928619
STATIC 128 overhead = 4.461093 microseconds +/- 1.647490

--------------------------------------------------------
Computing DYNAMIC 1 time using 20 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                258.730869   254.602800   262.523454    2.476805      0

DYNAMIC 1 time     = 258.730869 microseconds +/- 4.854537
DYNAMIC 1 overhead = 245.395274 microseconds +/- 5.573408

--------------------------------------------------------
Computing DYNAMIC 2 time using 20 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                130.229936   128.337590   132.161903    1.067811      0

DYNAMIC 2 time     = 130.229936 microseconds +/- 2.092909
DYNAMIC 2 overhead = 116.894341 microseconds +/- 2.811780

--------------------------------------------------------
Computing DYNAMIC 4 time using 40 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                67.670763   66.983950   68.757322    0.350380      1

DYNAMIC 4 time     = 67.670763 microseconds +/- 0.686744
DYNAMIC 4 overhead = 54.335167 microseconds +/- 1.405615

--------------------------------------------------------
Computing DYNAMIC 8 time using 80 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                36.608784   36.040336   37.089086    0.255648      0

DYNAMIC 8 time     = 36.608784 microseconds +/- 0.501069
DYNAMIC 8 overhead = 23.273188 microseconds +/- 1.219941

--------------------------------------------------------
Computing DYNAMIC 16 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                23.506998   23.270756   23.703900    0.110257      0

DYNAMIC 16 time     = 23.506998 microseconds +/- 0.216103
DYNAMIC 16 overhead = 10.171402 microseconds +/- 0.934975

--------------------------------------------------------
Computing DYNAMIC 32 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                20.911707   20.563588   24.389269    0.824795      1

DYNAMIC 32 time     = 20.911707 microseconds +/- 1.616597
DYNAMIC 32 overhead = 7.576112 microseconds +/- 2.335469

--------------------------------------------------------
Computing DYNAMIC 64 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                20.981350   20.707049   21.331369    0.143811      0

DYNAMIC 64 time     = 20.981350 microseconds +/- 0.281870
DYNAMIC 64 overhead = 7.645754 microseconds +/- 1.000741

--------------------------------------------------------
Computing DYNAMIC 128 time using 160 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                20.790303   20.509549   21.078075    0.161256      0

DYNAMIC 128 time     = 20.790303 microseconds +/- 0.316062
DYNAMIC 128 overhead = 7.454707 microseconds +/- 1.034934

--------------------------------------------------------
Computing GUIDED 1 time using 80 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                39.062471   38.759163   39.409386    0.199966      0

GUIDED 1 time     = 39.062471 microseconds +/- 0.391933
GUIDED 1 overhead = 25.726875 microseconds +/- 1.110804

--------------------------------------------------------
Computing GUIDED 2 time using 80 reps

Sample_size       Average     Min         Max          S.D.          Outliers
 20                36.721595   36.379599   37.092349    0.197488      0

GUIDED 2 time     = 36.721595 microseconds +/- 0.387077
GUIDED 2 overhead = 23.386000 microseconds +/- 1.105948
Using built-in specs.
COLLECT_GCC=/opt/gcc/10.1.0/bin/../snos/bin/gcc
COLLECT_LTO_WRAPPER=/opt/gcc/10.1.0/snos/libexec/gcc/x86_64-suse-linux/10.1.0/lto-wrapper
Target: x86_64-suse-linux
Configured with: ../cray-gcc-10.1.0-202007190429.e9e165705b91a/configure --prefix=/opt/gcc/10.1.0/snos --disable-nls --libdir=/opt/gcc/10.1.0/snos/lib --enable-languages=c,c++,fortran --with-gxx-include-dir=/opt/gcc/10.1.0/snos/include/g++ --with-slibdir=/opt/gcc/10.1.0/snos/lib --with-system-zlib --enable-shared --enable-__cxa_atexit --build=x86_64-suse-linux --with-ppl --with-cloog --disable-multilib
Thread model: posix
Supported LTO compression algorithms: zlib
gcc version 10.1.0 20200507 (Cray Inc.) (GCC) 
